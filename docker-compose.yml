version: '3'
services:

  flask:
    build:
      context: app
      dockerfile: Dockerfile
    container_name: flask
    restart: unless-stopped
    env_file: 
      - global_dev.env
    volumes:
      - "./app:/code"
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend
    ports:
      - "5000:5000"
  mongodb:
    image: mongo:4.0.8
    container_name: mongo
    restart: always
    env_file:
      - global_dev.env
    volumes:
      - "./mongo/container_volumes/mongo/data/db:/data/db"
      - "./mongo/container_logs/mongo/log:/var/log/mongodb"
    networks:
      - backend
#  webserver:
#    build:
#      context: nginx
#      dockerfile: Dockerfile
#    image: digitalocean.com/webserver:latest
#    container_name: webserver
#    restart: unless-stopped
#    env_file: 
#        - global_dev.env
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - nginxdata:/var/log/nginx
#    depends_on:
#      - flask
#    networks:
#      - frontend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local
